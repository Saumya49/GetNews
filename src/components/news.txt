import React, { Component } from "react";
import NewsItem from "./NewsItem";
import PropTypes from "prop-types";
import InfiniteScroll from "react-infinite-scroll-component";

export class News extends Component {
  static defaultProops = {
    country: "in",
    pageSize: 8,
    category: "general",
  };
  static propTypes = {
    country: PropTypes.string,
    pageSize: PropTypes.number,
    category: PropTypes.string,  };
  capitalizeFirstLetter = (string) => {
    return string.charAt(0).toUpperCase() + string.slice(1);
  };

  constructor(props) {
    super(props);
    //console.log("hello i am a constructor where you can get news");
    this.state = {
      articles: [],
      loading: false,
      page: 1,
      totalResult:0
    }
    document.title = `${this.capitalizeFirstLetter(
      this.props.category
    )}-GetNews`;
  }

async updateNews(){
  this.props.setProgress(10);
  const url = `https://newsapi.org/v2/top-headlines?country=${this.props.country}&category=${this.props.category}&apiKey=c0a075fff03a471681971b3f0ee3b265&page=${this.state.page}&pageSize=${this.props.pageSize}`;
  this.setState({loading:true});
  let data = await fetch(url);
  this.props.setProgress(40);
  let parsedData = await data.json();
  this.props.setProgress(70);
  this.setState({
    articles: parsedData.articles,
    loading:false,
    totalResult: parsedData.totalResults,
  })
  this.props.setProgress(100);

}

  async componentDidMount() {
   this.updateNews()

  }

  handlePrevClick = async () => {
    // let url = `https://newsapi.org/v2/top-headlines?country=${
    //   this.props.country
    // }&category=${
    //   this.props.category
    // }&apiKey=c0a075fff03a471681971b3f0ee3b265&page=${
    //   this.state.page - 1
    // }&pageSize=${this.props.pageSize}`;
    // let data = await fetch(url);
    // let parsedData = await data.json();
    // console.log(parsedData);

    // this.setState({
    //   page: this.state.page - 1,
    //   articles: parsedData.articles,
    // })
    this.setState({page:this.state.page-1})
    this.updateNews()
  }

  handleNextClick = async () => {
    // if (
    //   this.state.page + 1 >
    //   Math.ceil(this.state.totalResults / this.props.pageSize)
    // ) {
    // } else {
    //   let url = `https://newsapi.org/v2/top-headlines?country=${
    //     this.props.country
    //   }&category=${
    //     this.props.category
    //   }&apiKey=c0a075fff03a471681971b3f0ee3b265&page=${
    //     this.state.page + 1
    //   }&pageSize=${this.props.pageSize}`;
    //   let data = await fetch(url);
    //   let parsedData = await data.json();
    //   console.log(parsedData);

    //   this.setState({
    //     page: this.state.page + 1,
    //     articles: parsedData.articles,
    //   })
    // }
    this.setState({page:this.state.page+1})
  this.updateNews()
  }

  fetchMoreData=async()=>{
    this.setState({page:this.state.page+1})
    // this.updateNews()
    const url = `https://newsapi.org/v2/top-headlines?country=${this.props.country}&category=${this.props.category}&apiKey=c0a075fff03a471681971b3f0ee3b265&page=${this.state.page}&pageSize=${this.props.pageSize}`;
    this.setState({loading:true});
  let data = await fetch(url);
  let parsedData = await data.json();
  console.log(parsedData);
  this.setState({
    articles: this.state.articles.concat(parsedData.articles),
    loading:false,
    totalResult: parsedData.totalResults,
  })
  }


  render() {
    return (
      <>
        <h1 className="text-center">
          Get-News: Top {this.capitalizeFirstLetter(this.props.category)}{" "}
          Headlines
        </h1>
        {/* { this.state.loading && <spinner/>} */}

        <InfiniteScroll
          dataLength={this.state.articles.length}
          next={this.fetchMoreData}
          hasMore={this.state.articles.length !== this.state.totalResult}
          loader={<h4>Loading...</h4>}
          // loader={<Spinner/>}
        ><div className="container">

        
          <div className="row my-5">
            {this.state.articles.map((element) => {
              return (
                <div className="col-md-4" key={element.url}>
                  <NewsItem
                    title={element.title}
                    description={element.description}
                    imageUrl={element.urlToImage}
                    newsUrl={element.url}
                    author={element.author}
                    date={element.publishedAt}
                  />
                </div>
                 
              );
            })}
          </div>
          </div>
        </InfiniteScroll>
         {/* <div className="conatainer d-flex justify-content-between">
          <button
            disabled={this.state.page <= 1}
            type="button"
            className="btn btn-outline-dark"
            onClick={this.handlePrevClick}
          >
            &larr; Previous
          </button>
          <button
            disabled={
              this.state.page + 1 >
              Math.ceil(this.state.totalResults / this.props.pageSize)
            }
            type="button"
            className="btn btn-outline-dark"
            onClick={this.handleNextClick}
          >
            Next &rarr;
          </button>
          // </div>  */}
      </>
    )
        }
      }
      //export default News;
      News.defaultProps={
        country:'in',
        pageSize:8,
        category:'general',
      }


      News.propTypes={
        country:PropTypes.string,
        pageSize:PropTypes.number,
        category:PropTypes.string,
      }
      export default News;
